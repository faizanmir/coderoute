version: '3.8'

services:
  # 1. Application Microservices
  webhook-handler:
    build:
      context: .
      dockerfile: Dockerfile # Use the single, root Dockerfile
      args:
        SERVICE_NAME: webhook-handler-service
        SERVICE_PORT: 8080
    container_name: webhook-handler-app
    ports:
      - "8080:8080"
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - GITHUB_API_TOKEN=${GITHUB_API_TOKEN}

  pr-analyzer:
    build:
      context: .
      dockerfile: Dockerfile # Use the single, root Dockerfile
      args:
        SERVICE_NAME: pr-analyzer-service
        SERVICE_PORT: 8081
    container_name: pr-analyzer-app
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  ai-reviewer:
    build:
      context: .
      dockerfile: Dockerfile # Use the single, root Dockerfile
      args:
        SERVICE_NAME: ai-reviewer-service
        SERVICE_PORT: 8082
    container_name: ai-reviewer-app
    depends_on:
      - kafka
      - ollama
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_AI_OLLAMA_BASE_URL=http://ollama:11434

  comment-publisher:
    build:
      context: .
      dockerfile: Dockerfile # Use the single, root Dockerfile
      args:
        SERVICE_NAME: comment-publisher-service
        SERVICE_PORT: 8083
    container_name: comment-publisher-app
    depends_on:
      - kafka
      - mongo
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/coderoute

  comment-persistence:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        SERVICE_NAME: comment-persistence-service
        SERVICE_PORT: 8084
    container_name: comment-persistence-app
    depends_on:
      - kafka
    environment:
      - SPRING_KAFKA_BOOTSTRAP_SERVERS=kafka:29092

  # 2. Backing Infrastructure Services
  ollama:
    image: ollama/ollama
    container_name: ollama-service
    ports:
      - "11434:11434"
    volumes:
      - ollama_data:/root/.ollama

  ngrok:
    image: ngrok/ngrok:latest
    container_name: ngrok-tunnel
    ports:
      - "4040:4040"
    depends_on:
      - webhook-handler
    environment:
      - NGROK_AUTHTOKEN=${NGROK_AUTHTOKEN}
    command: http webhook-handler:8080

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.1
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000

  kafka:
    image: confluentinc/cp-kafka:7.0.1
    container_name: kafka
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1

  mongo:
    image: mongo:latest
    container_name: mongo-db
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db

volumes:
  ollama_data:
  mongo_data: